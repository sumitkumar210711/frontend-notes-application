{"ast":null,"code":"var _jsxFileName = \"/home/sumitkumar-210711/sumit_projects/frontend-notes-application/src/components/NotesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NotesList({\n  groupId,\n  groupName,\n  groupColor\n}) {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredNotes, setFilteredNotes] = useState([]);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const res = await axios.get(`https://notes-application-rc9p.onrender.com/api/notes/${groupId}`);\n      setNotes(res.data);\n      setFilteredNotes(res.data);\n    };\n    if (groupId) {\n      fetchNotes();\n    }\n  }, [groupId]);\n  useEffect(() => {\n    setFilteredNotes(notes.filter(note => note.content.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, notes]);\n  const getInitials = name => {\n    const words = name.split(' ');\n    if (words.length > 1) {\n      return (words[0][0] + words[1][0]).toUpperCase();\n    }\n    return name[0].toUpperCase();\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const optionsDate = {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric'\n    };\n    const optionsTime = {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    };\n    const formattedDate = date.toLocaleDateString('en-US', optionsDate);\n    const formattedTime = date.toLocaleTimeString('en-US', optionsTime);\n    return `${formattedDate}, ${formattedTime}`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl bg-blue-800 h-20 w-full mb-5 flex items-center p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-14 h-14 rounded-full mr-6 flex items-center justify-center text-white font-bold\",\n        style: {\n          backgroundColor: groupColor\n        },\n        children: getInitials(groupName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-white mr-auto\",\n        children: groupName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search notes...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"p-2 rounded w-1/3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow p-2 w-full overflow-y-auto\",\n      children: filteredNotes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2 p-6 bg-white border rounded relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 absolute bottom-2 right-2\",\n          children: formatDate(note.createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, note._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(NotesList, \"AE2GdTFhTTDF8Q0qmcEIgw0MXVI=\");\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","NotesList","groupId","groupName","groupColor","_s","notes","setNotes","searchTerm","setSearchTerm","filteredNotes","setFilteredNotes","fetchNotes","res","get","data","filter","note","content","toLowerCase","includes","getInitials","name","words","split","length","toUpperCase","formatDate","dateString","date","Date","optionsDate","day","month","year","optionsTime","hour","minute","hour12","formattedDate","toLocaleDateString","formattedTime","toLocaleTimeString","children","className","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","createdAt","_id","_c","$RefreshReg$"],"sources":["/home/sumitkumar-210711/sumit_projects/frontend-notes-application/src/components/NotesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction NotesList({ groupId, groupName, groupColor }) {\n  const [notes, setNotes] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredNotes, setFilteredNotes] = useState([]);\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const res = await axios.get(`https://notes-application-rc9p.onrender.com/api/notes/${groupId}`);\n      setNotes(res.data);\n      setFilteredNotes(res.data);\n    };\n    if (groupId) {\n      fetchNotes();\n    }\n  }, [groupId]);\n\n  useEffect(() => {\n    setFilteredNotes(\n      notes.filter(note =>\n        note.content.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    );\n  }, [searchTerm, notes]);\n\n  const getInitials = (name) => {\n    const words = name.split(' ');\n    if (words.length > 1) {\n      return (words[0][0] + words[1][0]).toUpperCase();\n    }\n    return name[0].toUpperCase();\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const optionsDate = { day: 'numeric', month: 'short', year: 'numeric' };\n    const optionsTime = { hour: '2-digit', minute: '2-digit', hour12: true };\n    const formattedDate = date.toLocaleDateString('en-US', optionsDate);\n    const formattedTime = date.toLocaleTimeString('en-US', optionsTime);\n    return `${formattedDate}, ${formattedTime}`;\n  };\n\n\n  return (\n    <>\n      <h2 className=\"text-xl bg-blue-800 h-20 w-full mb-5 flex items-center p-4\">\n        <div\n          className=\"w-14 h-14 rounded-full mr-6 flex items-center justify-center text-white font-bold\"\n          style={{ backgroundColor: groupColor }}\n        >\n          {getInitials(groupName)}\n        </div>\n        <span className=\"text-white mr-auto\">{groupName}</span>\n        <input\n          type=\"text\"\n          placeholder=\"Search notes...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"p-2 rounded w-1/3\"\n        />\n      </h2>\n      <div className=\"flex-grow p-2 w-full overflow-y-auto\">\n        {filteredNotes.map((note) => (\n          <div key={note._id} className=\"mb-2 p-6 bg-white border rounded relative\">\n            <p>{note.content}</p>\n            <p className=\"text-sm text-gray-500 absolute bottom-2 right-2\">{formatDate(note.createdAt)}</p>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default NotesList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}